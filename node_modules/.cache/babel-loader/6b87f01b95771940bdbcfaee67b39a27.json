{"remainingRequest":"/Users/mone/Desktop/Scanbage/node_modules/babel-loader/lib/index.js!/Users/mone/Desktop/Scanbage/src/models/Message.js","dependencies":[{"path":"/Users/mone/Desktop/Scanbage/src/models/Message.js","mtime":1564439189416},{"path":"/Users/mone/Desktop/Scanbage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mone/Desktop/Scanbage/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var tag = '[MessageModel]';\nexport default {\n  // get Initial Msg from Server\n  getInitMsg: function getInitMsg() {\n    console.log(tag, 'getInitMsg()');\n\n    if (window.fetch) {\n      return fetch('/message', {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        return json.msg;\n      }).catch(function (err) {\n        throw new Error(err);\n      });\n    } // for IE\n\n\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('get', '/message', true);\n      xhr.setRequestHeader('Content-type', 'application/json');\n\n      xhr.onload = function () {\n        var msg = JSON.parse(this.responseText).msg;\n        resolve(msg);\n      };\n\n      xhr.send();\n    });\n  }\n};",{"version":3,"sources":["/Users/mone/Desktop/Scanbage/src/models/Message.js"],"names":["tag","getInitMsg","console","log","window","fetch","method","headers","then","res","json","msg","catch","err","Error","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","onload","JSON","parse","responseText","send"],"mappings":"AAAA,IAAMA,GAAG,GAAG,gBAAZ;AAEA,eAAe;AACb;AACAC,EAAAA,UAFa,wBAEC;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiB,cAAjB;;AACA,QAAII,MAAM,CAACC,KAAX,EAAkB;AAChB,aAAOA,KAAK,CAAC,UAAD,EAAa;AACvBC,QAAAA,MAAM,EAAE,KADe;AAEvBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAFc,OAAb,CAAL,CAIJC,IAJI,CAIC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJJ,EAKJF,IALI,CAKC,UAAAE,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAT;AAAA,OALL,EAMJC,KANI,CAME,UAAAC,GAAG,EAAI;AAAE,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AAAsB,OANjC,CAAP;AAOD,KAVW,CAWZ;;;AACA,WAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgB,UAAhB,EAA4B,IAA5B;AACAF,MAAAA,GAAG,CAACG,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;;AACAH,MAAAA,GAAG,CAACI,MAAJ,GAAa,YAAY;AACvB,YAAIX,GAAG,GAAGY,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,EAA8Bd,GAAxC;AACAK,QAAAA,OAAO,CAACL,GAAD,CAAP;AACD,OAHD;;AAIAO,MAAAA,GAAG,CAACQ,IAAJ;AACD,KATM,CAAP;AAUD;AAxBY,CAAf","sourcesContent":["const tag = '[MessageModel]'\r\n\r\nexport default {\r\n  // get Initial Msg from Server\r\n  getInitMsg () {\r\n    console.log(tag, 'getInitMsg()')\r\n    if (window.fetch) {\r\n      return fetch('/message', {\r\n        method: 'get',\r\n        headers: { 'Content-Type': 'application/json' }\r\n      })\r\n        .then(res => res.json())\r\n        .then(json => json.msg)\r\n        .catch(err => { throw new Error(err) })\r\n    }\r\n    // for IE\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest()\r\n      xhr.open('get', '/message', true)\r\n      xhr.setRequestHeader('Content-type', 'application/json')\r\n      xhr.onload = function () {\r\n        let msg = JSON.parse(this.responseText).msg\r\n        resolve(msg)\r\n      }\r\n      xhr.send()\r\n    })\r\n  }\r\n}\r\n"]}]}